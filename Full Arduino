#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <TM1637Display.h>
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

//KEYPAD
const uint8_t ROWS = 4;
const uint8_t COLS = 4;
char keys[ROWS][COLS] = {
  { '1', '2', '3', 'A' },
  { '4', '5', '6', 'B' },
  { '7', '8', '9', 'C' },
  { '*', '0', '#', 'D' }
};

uint8_t colPins[COLS] = { 31, 33, 35, 37 }; // Pins connected to C1, C2, C3, C4
uint8_t rowPins[ROWS] = { 23, 25, 27, 29 }; // Pins connected to R1, R2, R3, R4

Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

//LCD
LiquidCrystal_I2C lcd(0x27, 20, 4);

//TM1637_SEVEN_SEGMENT
#define CLK 6
#define DIO 7

uint8_t blank[] = { 0x00, 0x00, 0x00, 0x00 };
String password = "1234";
String inpass;
String targetCount;
int target = 0;

int a = 0, b = 0, c = 0, d = 0;
unsigned int total;

TM1637Display display(CLK, DIO);

//OLED_SSD1306
//https://randomnerdtutorials.com/guide-for-oled-display-with-arduino/
//https://www.img2go.com/result#j=d62f8880-f5da-41df-a98a-37ec377cf572
//https://javl.github.io/image2cpp/
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 oledDisplay(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define NUMFLAKES     10 // Number of snowflakes in the animation example

#define LOGO_HEIGHT   16
#define LOGO_WIDTH    16


const unsigned char gambarku [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0xc0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0x00, 0x01, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x1f, 0xfc, 0x00, 0x07, 0xe0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x1f, 0xf0, 0x00, 0x1f, 0xf8, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x7f, 0x80, 0x00, 0x7f, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x01, 0xfe, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x0f, 0xf8, 0x00, 0x0f, 0xfc, 0x3f, 0xf0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x3f, 0xe0, 0x00, 0x3f, 0xf0, 0x0f, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0xff, 0x80, 0x00, 0xff, 0xc0, 0x03, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe3, 0xfe, 0x00, 0x03, 0xff, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x7f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xef, 0xf8, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x1f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc0, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xc0, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x03, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 0xff, 0xff, 
	0xff, 0xfc, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x00, 0x3f, 0xff, 
	0xff, 0xe0, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x07, 0xff, 
	0xff, 0x80, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x01, 0xff, 
	0xfe, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x7f, 
	0xf8, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x1f, 
	0xe0, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x07, 
	0x80, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x01, 
	0x80, 0x03, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x01, 
	0xe0, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x07, 
	0xf0, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x0f, 
	0xfd, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xbf, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff
};


//POTENSIO
int potensio = A0;
int nilai;
int output;

int kondisi =0;

void setup() 
{
  // put your setup code here, to run once:
  //SEVENSEGMENT TM1637
  //total = 0000;
  display.showNumberDec(0, true);
  display.setBrightness(4);

  //LCD
  lcd.init();
  lcd.backlight();
  display.setBrightness(4);
  lcd.begin(20, 4);
  lcd.setCursor(6,1);
  lcd.print("WELCOME");
  delay(1000);
  lcd.clear();

  //OLED
  oledDisplay.begin(SSD1306_SWITCHCAPVCC, 0x3C);  // here the 0x3c is the I2C address, check your i2c address if u have multiple devices.
  oledDisplay.clearDisplay();
  delay(2000);
}

void loop() 
{
  // put your main code here, to run repeatedly:
  while (kondisi == 0) //LOGIN
  {
    lcd.setCursor(0,0);
    lcd.print("INPUT PASSWORD");
    char key = keypad.getKey();
    if (key)
    {
      if (key != 'A' && key != 'B' && key != 'C' && key != 'D' && key != '#' && key != '*')
      {
        if(key == '0')
        {
          a = b;
          b = c;
          c = d;
          d = 0;
          total = (a*1000) + (b*100) + (c*10) + d;
        }
        else if(key == '1')
        {
          a = b;
          b = c;
          c = d;
          d = 1;
          total = (a*1000) + (b*100) + (c*10) + d;
        }
        else if(key == '2')
        {
          a = b;
          b = c;
          c = d;
          d = 2;
          total = (a*1000) + (b*100) + (c*10) + d;
        }
        else if(key == '3')
        {
          a = b;
          b = c;
          c = d;
          d = 3;
          total = (a*1000) + (b*100) + (c*10) + d;
        }
        else if(key == '4')
        {
          a = b;
          b = c;
          c = d;
          d = 4;
          total = (a*1000) + (b*100) + (c*10) + d;
        }
        else if(key == '5')
        {
          a = b;
          b = c;
          c = d;
          d = 5;
          total = (a*1000) + (b*100) + (c*10) + d;
        }
        else if(key == '6')
        {
          a = b;
          b = c;
          c = d;
          d = 6;
          total = (a*1000) + (b*100) + (c*10) + d;
        }
        else if(key == '7')
        {
          a = b;
          b = c;
          c = d;
          d = 7;
          total = (a*1000) + (b*100) + (c*10) + d;
        }
        else if(key == '8')
        {
          a = b;
          b = c;
          c = d;
          d = 8;
          total = (a*1000) + (b*100) + (c*10) + d;
        }
        else if(key == '9')
        {
          a = b;
          b = c;
          c = d;
          d = 9;
          total = (a*1000) + (b*100) + (c*10) + d;
        }
        inpass += key;
      }
      else if (key == '#')
      {
        kondisi = 1;
        lcd.clear();
      }
      else if (key == 'C')
      {
        a = b = c = d = total = 0;
        inpass = "";
      }
    }
    display.showNumberDec(total, true);
  }
  while ( kondisi == 1) //MENU
  {
    if (inpass == password)
    {
      oledDisplay.drawBitmap(0, 0, gambarku, 128, 64, WHITE);
      oledDisplay.display();

      display.showNumberDec(0, true);
      char key = keypad.getKey();
      lcd.setCursor(0,0);
      lcd.print("PILIHAN MENU");
      lcd.setCursor(0,1);
      lcd.print("1. Potensio");
      lcd.setCursor(0,2);
      lcd.print("2. Counting Up");
      lcd.setCursor(0,3);
      lcd.print("3. Counting Down");

      if(key)
      {
        if(key == '1')
        {
          kondisi = 2;
          lcd.clear();
        }
        if(key == '2')
        {
          a = b = c = d = total = 0;
          targetCount = "";
          kondisi = 3;
          lcd.clear();
        }
        if(key == '3')
        {
          a = b = c = d = total = 0;
          targetCount = "";
          kondisi = 5;
          lcd.clear();
        }
        if(key == '*')
        {
          kondisi = 7;
          lcd.clear();
        }
      }
    }
    else
    {
      a = b = c = d = total = 0;
      inpass = "";
      display.showNumberDec(0, true);
      char key = keypad.getKey();
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("TRY AGAIN");
      delay(2000);
      lcd.clear();
      kondisi = 0;
    }
  }
  while (kondisi == 2) //POTENSIO
  {
    char key = keypad.getKey();
    nilai = analogRead(potensio);
    output = map(nilai, 0, 1023, 0, 255);

    lcd.setCursor(0,0);
    lcd.print("Potensiometer :");
    lcd.setCursor(0,1);
    lcd.print("sensor: ");
    lcd.print(nilai);
    lcd.setCursor(0,2);
    lcd.print("output: ");
    lcd.print(output);
    oledDisplay.clearDisplay();
    oledDisplay.display();

    if(key)
    {
      if(key == 'B')
      {
        kondisi = 1;
        lcd.clear();

      }
    }
  }
  while (kondisi == 3) //COUNTING UP SETTING UP
  {
    char key = keypad.getKey();
    lcd.setCursor(0,0);
    lcd.print("Input Counter Up");
    oledDisplay.clearDisplay();
    oledDisplay.display();

    if(key)
    {
      if (key != 'A' && key != 'B' && key != 'C' && key != 'D' && key != '#' && key != '*')
      {
        if(key == '0')
        {
          a = b;
          b = 0;
          total = (a*1000) + (b*100);
        }
        else if(key == '1')
        {
          a = b;
          b = 1;
          total = (a*1000) + (b*100);
        }
        else if(key == '2')
        {
          a = b;
          b = 2;
          total = (a*1000) + (b*100);
        }
        else if(key == '3')
        {
          a = b;
          b = 3;
          total = (a*1000) + (b*100);
        }
        else if(key == '4')
        {
          a = b;
          b = 4;
          total = (a*1000) + (b*100);
        }
        else if(key == '5')
        {
          a = b;
          b = 5;
          total = (a*1000) + (b*100);
        }
        else if(key == '6')
        {
          a = b;
          b = 6;
          total = (a*1000) + (b*100);
        }
        else if(key == '7')
        {
          a = b;
          b = 7;
          total = (a*1000) + (b*100);
        }
        else if(key == '8')
        {
          a = b;
          b = 8;
          total = (a*1000) + (b*100);
        }
        else if(key == '9')
        {
          a = b;
          b = 9;
          total = (a*1000) + (b*100);
        }
        targetCount += key;
      }
      else if(key == 'B')
      {
        kondisi = 1;
        lcd.clear();

      }
      else if (key == 'C')
      {
        a = b = c = d = total = 0;
        targetCount = "";
      }
      else if (key == '#')
      {
        kondisi = 4;
        lcd.clear();
        display.showNumberDec(total, false);
      }
    }
    display.showNumberDec(total, true); 
  }
  while(kondisi == 4)//COUNTING UP START //MASIH SALAHH!!!!!!
  {
    char key = keypad.getKey();
    lcd.clear();
    
    oledDisplay.clearDisplay();
    oledDisplay.display();
    static unsigned int count = 0;
    //int target = std::stoi(targetCount);
    int target = targetCount.toInt();

    if (count <= target) 
    {
      lcd.setCursor(0,0);
      lcd.print("Counting Up Mulai");

      // Convert the count and target count to strings
      char countStr[5];
      char targetStr[3];
      sprintf(countStr, "%04d", count);
      sprintf(targetStr, "%02d", target);

      // Combine the count and target count strings
      char combinedStr[5];
      sprintf(combinedStr, "%s%s", targetStr, countStr + 2);

      // Display the combined count on the TM1637 module
      display.showNumberDecEx(atoi(combinedStr), 0b11100000, true);

      // Increment the count
      count++;

      // Delay for 1 second
      delay(1000);

      if (count == target)
      {
        a = b = c = d = total = 0;
        targetCount = "";
        target = 0;
        count = 0;
        display.showNumberDecEx(atoi(combinedStr), 0b11100000, false);
        display.showNumberDec(total, true);
        lcd.clear();
        delay(100);
        lcd.setCursor(0,0);
        lcd.print("Counting Up Selesai");
        delay(2000);
        lcd.clear();
        kondisi = 1;
      }
    }
  }
  while (kondisi == 5) //COUNTING DOWN SETTING
  {
    char key = keypad.getKey();
    lcd.setCursor(0,0);
    lcd.print("Input Counter Down");
    oledDisplay.clearDisplay();
    oledDisplay.display();

    if(key)
    {
      if (key != 'A' && key != 'B' && key != 'C' && key != 'D' && key != '#' && key != '*')
      {
        if(key == '0')
        {
          a = b;
          b = 0;
          total = (a*1000) + (b*100);
        }
        else if(key == '1')
        {
          a = b;
          b = 1;
          total = (a*1000) + (b*100);
        }
        else if(key == '2')
        {
          a = b;
          b = 2;
          total = (a*1000) + (b*100);
        }
        else if(key == '3')
        {
          a = b;
          b = 3;
          total = (a*1000) + (b*100);
        }
        else if(key == '4')
        {
          a = b;
          b = 4;
          total = (a*1000) + (b*100);
        }
        else if(key == '5')
        {
          a = b;
          b = 5;
          total = (a*1000) + (b*100);
        }
        else if(key == '6')
        {
          a = b;
          b = 6;
          total = (a*1000) + (b*100);
        }
        else if(key == '7')
        {
          a = b;
          b = 7;
          total = (a*1000) + (b*100);
        }
        else if(key == '8')
        {
          a = b;
          b = 8;
          total = (a*1000) + (b*100);
        }
        else if(key == '9')
        {
          a = b;
          b = 9;
          total = (a*1000) + (b*100);
        }
        targetCount += key;
      }
      else if(key == 'B')
      {
        kondisi = 1;
        lcd.clear();

      }
      else if (key == 'C')
      {
        a = b = c = d = total = 0;
        targetCount = "";
      }
      else if (key == '#')
      {
        int target = targetCount.toInt();
        lcd.clear();
        display.showNumberDec(total, false);
        kondisi = 6;
      }
    }
    display.showNumberDec(total, true); 
  }
  while (kondisi == 6)
  {
    char key = keypad.getKey();
    lcd.clear();
    
    oledDisplay.clearDisplay();
    oledDisplay.display();
    int target = targetCount.toInt();
    static int count = target;
    //int target = std::stoi(targetCount);

    if (count >= 0) 
    {
      lcd.setCursor(0,0);
      lcd.print("Counting Down Mulai");

      // Convert the count and target count to strings
      char countStr[5];
      char targetStr[3];
      sprintf(countStr, "%04d", count);
      sprintf(targetStr, "%02d", target);

      // Combine the count and target count strings
      char combinedStr[5];
      sprintf(combinedStr, "%s%s", targetStr, countStr + 2);

      // Display the combined count on the TM1637 module
      display.showNumberDecEx(atoi(combinedStr), 0b11100000, true);

      // Increment the count
      count--;

      // Delay for 1 second
      delay(1000);

      if (count == 0)
      {
        //a = b = c = d = total = 0;
        //targetCount = "";
        target = targetCount.toInt();
        count = target;
        display.showNumberDecEx(atoi(combinedStr), 0b11100000, false);
        display.showNumberDec(total, true);
        lcd.clear();
        delay(100);
        lcd.setCursor(0,0);
        lcd.print("Counting Down Done");
        delay(2000);
        lcd.clear();
        kondisi = 1;
      }
    }
  }
  while(kondisi == 7)//MENU SCREEN 2
  {
    oledDisplay.drawBitmap(0, 0, gambarku, 128, 64, WHITE);
    oledDisplay.display();

    display.showNumberDec(0, true);
    char key = keypad.getKey();
    lcd.setCursor(0,0);
    lcd.print("PILIHAN MENU");
    lcd.setCursor(0,1);
    lcd.print("4. Servo CW");

    if (key)
    {
      if (key == '4')
      {
        lcd.clear();
        kondisi = 8;
      }
      if (key == 'B')
      {
        lcd.clear();
        kondisi = 1;
      }
    }
  }
  while(kondisi == 8)
  {
    lcd.clear();
  }
}
